### YamlMime:ManagedReference
items:
- uid: SRLApiClient.Extensions.LeaderboardExtensions
  commentId: T:SRLApiClient.Extensions.LeaderboardExtensions
  id: LeaderboardExtensions
  parent: SRLApiClient.Extensions
  children:
  - SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  - SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  langs:
  - csharp
  - vb
  name: LeaderboardExtensions
  nameWithType: LeaderboardExtensions
  fullName: SRLApiClient.Extensions.LeaderboardExtensions
  type: Class
  source:
    remote:
      path: SRLApiClient/Extensions/LeaderboardExtensions.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: LeaderboardExtensions
    path: Extensions/LeaderboardExtensions.cs
    startLine: 9
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Extensions
  summary: "\nExtensions for the <xref href=\"SRLApiClient.Endpoints.Leaderboards.Leaderboard\" data-throw-if-not-resolved=\"false\"></xref> type\n"
  example: []
  syntax:
    content: 'public static class LeaderboardExtensions : object'
    content.vb: >-
      Public Module LeaderboardExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  commentId: M:SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  id: ContainsPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  isExtensionMethod: true
  parent: SRLApiClient.Extensions.LeaderboardExtensions
  langs:
  - csharp
  - vb
  name: ContainsPlayer(Leaderboard, String)
  nameWithType: LeaderboardExtensions.ContainsPlayer(Leaderboard, String)
  fullName: SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard, System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/Extensions/LeaderboardExtensions.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: ContainsPlayer
    path: Extensions/LeaderboardExtensions.cs
    startLine: 17
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Extensions
  summary: "\nChecks if a players name is on the leaderboard\n"
  example: []
  syntax:
    content: public static bool ContainsPlayer(this Leaderboard leaderboard, string playerName)
    parameters:
    - id: leaderboard
      type: SRLApiClient.Endpoints.Leaderboards.Leaderboard
      description: The leaderboard to check
    - id: playerName
      type: System.String
      description: The players name
    return:
      type: System.Boolean
      description: Returns true if a match was found
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ContainsPlayer(leaderboard As Leaderboard, playerName As String) As Boolean
  overload: SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  commentId: M:SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  id: FindPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard,System.String)
  isExtensionMethod: true
  parent: SRLApiClient.Extensions.LeaderboardExtensions
  langs:
  - csharp
  - vb
  name: FindPlayer(Leaderboard, String)
  nameWithType: LeaderboardExtensions.FindPlayer(Leaderboard, String)
  fullName: SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer(SRLApiClient.Endpoints.Leaderboards.Leaderboard, System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/Extensions/LeaderboardExtensions.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: FindPlayer
    path: Extensions/LeaderboardExtensions.cs
    startLine: 26
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Extensions
  summary: "\nReturns the first leader on the leaderboard matching <code data-dev-comment-type=\"paramref\" class=\"paramref\">playerName</code>\n"
  example: []
  syntax:
    content: public static Leader FindPlayer(this Leaderboard leaderboard, string playerName)
    parameters:
    - id: leaderboard
      type: SRLApiClient.Endpoints.Leaderboards.Leaderboard
      description: The leaderboard to check
    - id: playerName
      type: System.String
      description: The players name
    return:
      type: SRLApiClient.Endpoints.Leaderboards.Leader
      description: Returns the leader
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FindPlayer(leaderboard As Leaderboard, playerName As String) As Leader
  overload: SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SRLApiClient.Endpoints.Leaderboards.Leaderboard
  commentId: T:SRLApiClient.Endpoints.Leaderboards.Leaderboard
  parent: SRLApiClient.Endpoints.Leaderboards
  name: Leaderboard
  nameWithType: Leaderboard
  fullName: SRLApiClient.Endpoints.Leaderboards.Leaderboard
- uid: SRLApiClient.Extensions
  commentId: N:SRLApiClient.Extensions
  name: SRLApiClient.Extensions
  nameWithType: SRLApiClient.Extensions
  fullName: SRLApiClient.Extensions
- uid: SRLApiClient.Endpoints.Leaderboards
  commentId: N:SRLApiClient.Endpoints.Leaderboards
  name: SRLApiClient.Endpoints.Leaderboards
  nameWithType: SRLApiClient.Endpoints.Leaderboards
  fullName: SRLApiClient.Endpoints.Leaderboards
- uid: SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer*
  commentId: Overload:SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer
  name: ContainsPlayer
  nameWithType: LeaderboardExtensions.ContainsPlayer
  fullName: SRLApiClient.Extensions.LeaderboardExtensions.ContainsPlayer
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer*
  commentId: Overload:SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer
  name: FindPlayer
  nameWithType: LeaderboardExtensions.FindPlayer
  fullName: SRLApiClient.Extensions.LeaderboardExtensions.FindPlayer
- uid: SRLApiClient.Endpoints.Leaderboards.Leader
  commentId: T:SRLApiClient.Endpoints.Leaderboards.Leader
  parent: SRLApiClient.Endpoints.Leaderboards
  name: Leader
  nameWithType: Leader
  fullName: SRLApiClient.Endpoints.Leaderboards.Leader
