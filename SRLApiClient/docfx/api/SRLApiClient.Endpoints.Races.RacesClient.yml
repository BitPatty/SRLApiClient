### YamlMime:ManagedReference
items:
- uid: SRLApiClient.Endpoints.Races.RacesClient
  commentId: T:SRLApiClient.Endpoints.Races.RacesClient
  id: RacesClient
  parent: SRLApiClient.Endpoints.Races
  children:
  - SRLApiClient.Endpoints.Races.RacesClient.#ctor(SRLApiClient.SRLClient)
  - SRLApiClient.Endpoints.Races.RacesClient.Get(System.String)
  - SRLApiClient.Endpoints.Races.RacesClient.GetActive
  - SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync
  - SRLApiClient.Endpoints.Races.RacesClient.GetAsync(System.String)
  - SRLApiClient.Endpoints.Races.RacesClient.Item(System.String)
  langs:
  - csharp
  - vb
  name: RacesClient
  nameWithType: RacesClient
  fullName: SRLApiClient.Endpoints.Races.RacesClient
  type: Class
  source:
    remote:
      path: SRLApiClient/Endpoints/Races/RacesClient.cs
      branch: paginated-requests
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: RacesClient
    path: Endpoints/Races/RacesClient.cs
    startLine: 12
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Races
  summary: "\nA client to perform requests on the /races endpoint\n"
  example: []
  syntax:
    content: 'public class RacesClient : SRLEndpoint'
    content.vb: >-
      Public Class RacesClient
          Inherits SRLEndpoint
  inheritance:
  - System.Object
  - SRLApiClient.Endpoints.SRLEndpoint
  inheritedMembers:
  - SRLApiClient.Endpoints.SRLEndpoint.BasePath
  - SRLApiClient.Endpoints.SRLEndpoint.SrlClient
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SRLApiClient.Endpoints.Races.RacesClient.#ctor(SRLApiClient.SRLClient)
  commentId: M:SRLApiClient.Endpoints.Races.RacesClient.#ctor(SRLApiClient.SRLClient)
  id: '#ctor(SRLApiClient.SRLClient)'
  parent: SRLApiClient.Endpoints.Races.RacesClient
  langs:
  - csharp
  - vb
  name: RacesClient(SRLClient)
  nameWithType: RacesClient.RacesClient(SRLClient)
  fullName: SRLApiClient.Endpoints.Races.RacesClient.RacesClient(SRLApiClient.SRLClient)
  type: Constructor
  source:
    remote:
      path: SRLApiClient/Endpoints/Races/RacesClient.cs
      branch: paginated-requests
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: .ctor
    path: Endpoints/Races/RacesClient.cs
    startLine: 18
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Races
  summary: "\nCreates a new client to perform requests on the /races endpoint\n"
  example: []
  syntax:
    content: public RacesClient(SRLClient baseClient)
    parameters:
    - id: baseClient
      type: SRLApiClient.SRLClient
      description: The <xref href="SRLApiClient.SRLClient" data-throw-if-not-resolved="false"></xref> used to perform requests
    content.vb: Public Sub New(baseClient As SRLClient)
  overload: SRLApiClient.Endpoints.Races.RacesClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.Endpoints.Races.RacesClient.Get(System.String)
  commentId: M:SRLApiClient.Endpoints.Races.RacesClient.Get(System.String)
  id: Get(System.String)
  parent: SRLApiClient.Endpoints.Races.RacesClient
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: RacesClient.Get(String)
  fullName: SRLApiClient.Endpoints.Races.RacesClient.Get(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/Endpoints/Races/RacesClient.cs
      branch: paginated-requests
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: Get
    path: Endpoints/Races/RacesClient.cs
    startLine: 25
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Races
  summary: "\nGets a single race synchronously\n"
  example: []
  syntax:
    content: public Race Get(string raceId)
    parameters:
    - id: raceId
      type: System.String
      description: The races id
    return:
      type: SRLApiClient.Endpoints.Races.Race
      description: Returns the <xref href="SRLApiClient.Endpoints.Races.Race" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Get(raceId As String) As Race
  overload: SRLApiClient.Endpoints.Races.RacesClient.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.Endpoints.Races.RacesClient.GetAsync(System.String)
  commentId: M:SRLApiClient.Endpoints.Races.RacesClient.GetAsync(System.String)
  id: GetAsync(System.String)
  parent: SRLApiClient.Endpoints.Races.RacesClient
  langs:
  - csharp
  - vb
  name: GetAsync(String)
  nameWithType: RacesClient.GetAsync(String)
  fullName: SRLApiClient.Endpoints.Races.RacesClient.GetAsync(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/Endpoints/Races/RacesClient.cs
      branch: paginated-requests
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: GetAsync
    path: Endpoints/Races/RacesClient.cs
    startLine: 42
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Races
  summary: "\nGets a single race asynchronously\n"
  example: []
  syntax:
    content: public Task<Race> GetAsync(string raceId)
    parameters:
    - id: raceId
      type: System.String
      description: The races id
    return:
      type: System.Threading.Tasks.Task{SRLApiClient.Endpoints.Races.Race}
      description: Returns the <xref href="SRLApiClient.Endpoints.Races.Race" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetAsync(raceId As String) As Task(Of Race)
  overload: SRLApiClient.Endpoints.Races.RacesClient.GetAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.Endpoints.Races.RacesClient.GetActive
  commentId: M:SRLApiClient.Endpoints.Races.RacesClient.GetActive
  id: GetActive
  parent: SRLApiClient.Endpoints.Races.RacesClient
  langs:
  - csharp
  - vb
  name: GetActive()
  nameWithType: RacesClient.GetActive()
  fullName: SRLApiClient.Endpoints.Races.RacesClient.GetActive()
  type: Method
  source:
    remote:
      path: SRLApiClient/Endpoints/Races/RacesClient.cs
      branch: paginated-requests
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: GetActive
    path: Endpoints/Races/RacesClient.cs
    startLine: 68
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Races
  summary: "\nGets the currently active races synchronously\n"
  example: []
  syntax:
    content: public ReadOnlyCollection<Race> GetActive()
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{SRLApiClient.Endpoints.Races.Race}
      description: Returns a list of active races
    content.vb: Public Function GetActive As ReadOnlyCollection(Of Race)
  overload: SRLApiClient.Endpoints.Races.RacesClient.GetActive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync
  commentId: M:SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync
  id: GetActiveAsync
  parent: SRLApiClient.Endpoints.Races.RacesClient
  langs:
  - csharp
  - vb
  name: GetActiveAsync()
  nameWithType: RacesClient.GetActiveAsync()
  fullName: SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync()
  type: Method
  source:
    remote:
      path: SRLApiClient/Endpoints/Races/RacesClient.cs
      branch: paginated-requests
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: GetActiveAsync
    path: Endpoints/Races/RacesClient.cs
    startLine: 84
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Races
  summary: "\nGets the currently active races asynchronously\n"
  example: []
  syntax:
    content: public Task<ReadOnlyCollection<Race>> GetActiveAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.ObjectModel.ReadOnlyCollection{SRLApiClient.Endpoints.Races.Race}}
      description: Returns a list of active races
    content.vb: Public Function GetActiveAsync As Task(Of ReadOnlyCollection(Of Race))
  overload: SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.Endpoints.Races.RacesClient.Item(System.String)
  commentId: P:SRLApiClient.Endpoints.Races.RacesClient.Item(System.String)
  id: Item(System.String)
  parent: SRLApiClient.Endpoints.Races.RacesClient
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: RacesClient.Item[String]
  fullName: SRLApiClient.Endpoints.Races.RacesClient.Item[System.String]
  type: Property
  source:
    remote:
      path: SRLApiClient/Endpoints/Races/RacesClient.cs
      branch: paginated-requests
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: this[]
    path: Endpoints/Races/RacesClient.cs
    startLine: 101
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Races
  summary: "\nGets a single race\n"
  example: []
  syntax:
    content: public Race this[string raceId] { get; }
    parameters:
    - id: raceId
      type: System.String
      description: The races id
    return:
      type: SRLApiClient.Endpoints.Races.Race
      description: Returns the race
    content.vb: Public ReadOnly Property Item(raceId As String) As Race
  overload: SRLApiClient.Endpoints.Races.RacesClient.Item*
  nameWithType.vb: RacesClient.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SRLApiClient.Endpoints.Races.RacesClient.Item(System.String)
  name.vb: Item(String)
references:
- uid: SRLApiClient.Endpoints.Races
  commentId: N:SRLApiClient.Endpoints.Races
  name: SRLApiClient.Endpoints.Races
  nameWithType: SRLApiClient.Endpoints.Races
  fullName: SRLApiClient.Endpoints.Races
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SRLApiClient.Endpoints.SRLEndpoint
  commentId: T:SRLApiClient.Endpoints.SRLEndpoint
  parent: SRLApiClient.Endpoints
  name: SRLEndpoint
  nameWithType: SRLEndpoint
  fullName: SRLApiClient.Endpoints.SRLEndpoint
- uid: SRLApiClient.Endpoints.SRLEndpoint.BasePath
  commentId: P:SRLApiClient.Endpoints.SRLEndpoint.BasePath
  parent: SRLApiClient.Endpoints.SRLEndpoint
  name: BasePath
  nameWithType: SRLEndpoint.BasePath
  fullName: SRLApiClient.Endpoints.SRLEndpoint.BasePath
- uid: SRLApiClient.Endpoints.SRLEndpoint.SrlClient
  commentId: P:SRLApiClient.Endpoints.SRLEndpoint.SrlClient
  parent: SRLApiClient.Endpoints.SRLEndpoint
  name: SrlClient
  nameWithType: SRLEndpoint.SrlClient
  fullName: SRLApiClient.Endpoints.SRLEndpoint.SrlClient
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SRLApiClient.Endpoints
  commentId: N:SRLApiClient.Endpoints
  name: SRLApiClient.Endpoints
  nameWithType: SRLApiClient.Endpoints
  fullName: SRLApiClient.Endpoints
- uid: SRLApiClient.SRLClient
  commentId: T:SRLApiClient.SRLClient
  parent: SRLApiClient
  name: SRLClient
  nameWithType: SRLClient
  fullName: SRLApiClient.SRLClient
- uid: SRLApiClient.Endpoints.Races.RacesClient.#ctor*
  commentId: Overload:SRLApiClient.Endpoints.Races.RacesClient.#ctor
  name: RacesClient
  nameWithType: RacesClient.RacesClient
  fullName: SRLApiClient.Endpoints.Races.RacesClient.RacesClient
- uid: SRLApiClient
  commentId: N:SRLApiClient
  name: SRLApiClient
  nameWithType: SRLApiClient
  fullName: SRLApiClient
- uid: SRLApiClient.Endpoints.Races.Race
  commentId: T:SRLApiClient.Endpoints.Races.Race
  parent: SRLApiClient.Endpoints.Races
  name: Race
  nameWithType: Race
  fullName: SRLApiClient.Endpoints.Races.Race
- uid: SRLApiClient.Endpoints.Races.RacesClient.Get*
  commentId: Overload:SRLApiClient.Endpoints.Races.RacesClient.Get
  name: Get
  nameWithType: RacesClient.Get
  fullName: SRLApiClient.Endpoints.Races.RacesClient.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SRLApiClient.Endpoints.Races.RacesClient.GetAsync*
  commentId: Overload:SRLApiClient.Endpoints.Races.RacesClient.GetAsync
  name: GetAsync
  nameWithType: RacesClient.GetAsync
  fullName: SRLApiClient.Endpoints.Races.RacesClient.GetAsync
- uid: System.Threading.Tasks.Task{SRLApiClient.Endpoints.Races.Race}
  commentId: T:System.Threading.Tasks.Task{SRLApiClient.Endpoints.Races.Race}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Race>
  nameWithType: Task<Race>
  fullName: System.Threading.Tasks.Task<SRLApiClient.Endpoints.Races.Race>
  nameWithType.vb: Task(Of Race)
  fullName.vb: System.Threading.Tasks.Task(Of SRLApiClient.Endpoints.Races.Race)
  name.vb: Task(Of Race)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SRLApiClient.Endpoints.Races.Race
    name: Race
    nameWithType: Race
    fullName: SRLApiClient.Endpoints.Races.Race
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SRLApiClient.Endpoints.Races.Race
    name: Race
    nameWithType: Race
    fullName: SRLApiClient.Endpoints.Races.Race
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: SRLApiClient.Endpoints.Races.RacesClient.GetActive*
  commentId: Overload:SRLApiClient.Endpoints.Races.RacesClient.GetActive
  name: GetActive
  nameWithType: RacesClient.GetActive
  fullName: SRLApiClient.Endpoints.Races.RacesClient.GetActive
- uid: System.Collections.ObjectModel.ReadOnlyCollection{SRLApiClient.Endpoints.Races.Race}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{SRLApiClient.Endpoints.Races.Race}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<Race>
  nameWithType: ReadOnlyCollection<Race>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<SRLApiClient.Endpoints.Races.Race>
  nameWithType.vb: ReadOnlyCollection(Of Race)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of SRLApiClient.Endpoints.Races.Race)
  name.vb: ReadOnlyCollection(Of Race)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SRLApiClient.Endpoints.Races.Race
    name: Race
    nameWithType: Race
    fullName: SRLApiClient.Endpoints.Races.Race
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SRLApiClient.Endpoints.Races.Race
    name: Race
    nameWithType: Race
    fullName: SRLApiClient.Endpoints.Races.Race
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync*
  commentId: Overload:SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync
  name: GetActiveAsync
  nameWithType: RacesClient.GetActiveAsync
  fullName: SRLApiClient.Endpoints.Races.RacesClient.GetActiveAsync
- uid: System.Threading.Tasks.Task{System.Collections.ObjectModel.ReadOnlyCollection{SRLApiClient.Endpoints.Races.Race}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.ObjectModel.ReadOnlyCollection{SRLApiClient.Endpoints.Races.Race}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReadOnlyCollection<Race>>
  nameWithType: Task<ReadOnlyCollection<Race>>
  fullName: System.Threading.Tasks.Task<System.Collections.ObjectModel.ReadOnlyCollection<SRLApiClient.Endpoints.Races.Race>>
  nameWithType.vb: Task(Of ReadOnlyCollection(Of Race))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.ObjectModel.ReadOnlyCollection(Of SRLApiClient.Endpoints.Races.Race))
  name.vb: Task(Of ReadOnlyCollection(Of Race))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SRLApiClient.Endpoints.Races.Race
    name: Race
    nameWithType: Race
    fullName: SRLApiClient.Endpoints.Races.Race
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SRLApiClient.Endpoints.Races.Race
    name: Race
    nameWithType: Race
    fullName: SRLApiClient.Endpoints.Races.Race
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SRLApiClient.Endpoints.Races.RacesClient.Item*
  commentId: Overload:SRLApiClient.Endpoints.Races.RacesClient.Item
  name: Item
  nameWithType: RacesClient.Item
  fullName: SRLApiClient.Endpoints.Races.RacesClient.Item
