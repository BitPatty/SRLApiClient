### YamlMime:ManagedReference
items:
- uid: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient
  commentId: T:SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient
  id: LeaderboardsClient
  parent: SRLApiClient.Endpoints.Leaderboards
  children:
  - SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.#ctor(SRLApiClient.SRLClient)
  - SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get(System.String)
  - SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync(System.String)
  langs:
  - csharp
  - vb
  name: LeaderboardsClient
  nameWithType: LeaderboardsClient
  fullName: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient
  type: Class
  source:
    remote:
      path: SRLApiClient/Endpoints/Leaderboards/LeaderboardsClient.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: LeaderboardsClient
    path: Endpoints/Leaderboards/LeaderboardsClient.cs
    startLine: 7
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Leaderboards
  summary: "\nA client to perform requests on the /leaderboard endpoint\n"
  example: []
  syntax:
    content: 'public class LeaderboardsClient : SRLEndpoint'
    content.vb: >-
      Public Class LeaderboardsClient
          Inherits SRLEndpoint
  inheritance:
  - System.Object
  - SRLApiClient.Endpoints.SRLEndpoint
  inheritedMembers:
  - SRLApiClient.Endpoints.SRLEndpoint.BasePath
  - SRLApiClient.Endpoints.SRLEndpoint.SrlClient
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.#ctor(SRLApiClient.SRLClient)
  commentId: M:SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.#ctor(SRLApiClient.SRLClient)
  id: '#ctor(SRLApiClient.SRLClient)'
  parent: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient
  langs:
  - csharp
  - vb
  name: LeaderboardsClient(SRLClient)
  nameWithType: LeaderboardsClient.LeaderboardsClient(SRLClient)
  fullName: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.LeaderboardsClient(SRLApiClient.SRLClient)
  type: Constructor
  source:
    remote:
      path: SRLApiClient/Endpoints/Leaderboards/LeaderboardsClient.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: .ctor
    path: Endpoints/Leaderboards/LeaderboardsClient.cs
    startLine: 13
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Leaderboards
  summary: "\nCreates a new client to perform requests on the /leaderboard endpoint\n"
  example: []
  syntax:
    content: public LeaderboardsClient(SRLClient baseClient)
    parameters:
    - id: baseClient
      type: SRLApiClient.SRLClient
      description: The <xref href="SRLApiClient.SRLClient" data-throw-if-not-resolved="false"></xref> used to perform requests
    content.vb: Public Sub New(baseClient As SRLClient)
  overload: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get(System.String)
  commentId: M:SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get(System.String)
  id: Get(System.String)
  parent: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: LeaderboardsClient.Get(String)
  fullName: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/Endpoints/Leaderboards/LeaderboardsClient.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: Get
    path: Endpoints/Leaderboards/LeaderboardsClient.cs
    startLine: 20
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Leaderboards
  summary: "\nGets a single leaderboard synchronously\n"
  example: []
  syntax:
    content: public Leaderboard Get(string abbrev)
    parameters:
    - id: abbrev
      type: System.String
      description: The games abbreviation
    return:
      type: SRLApiClient.Endpoints.Leaderboards.Leaderboard
      description: Returns the leaderboard
    content.vb: Public Function Get(abbrev As String) As Leaderboard
  overload: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync(System.String)
  commentId: M:SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync(System.String)
  id: GetAsync(System.String)
  parent: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient
  langs:
  - csharp
  - vb
  name: GetAsync(String)
  nameWithType: LeaderboardsClient.GetAsync(String)
  fullName: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/Endpoints/Leaderboards/LeaderboardsClient.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: GetAsync
    path: Endpoints/Leaderboards/LeaderboardsClient.cs
    startLine: 28
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.Endpoints.Leaderboards
  summary: "\nGets a single leaderboard asynchronously\n"
  example: []
  syntax:
    content: public Task<Leaderboard> GetAsync(string abbrev)
    parameters:
    - id: abbrev
      type: System.String
      description: The games abbreviation
    return:
      type: Task{SRLApiClient.Endpoints.Leaderboards.Leaderboard}
      description: Returns the leaderboard
    content.vb: Public Function GetAsync(abbrev As String) As Task(Of Leaderboard)
  overload: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SRLApiClient.Endpoints.Leaderboards
  commentId: N:SRLApiClient.Endpoints.Leaderboards
  name: SRLApiClient.Endpoints.Leaderboards
  nameWithType: SRLApiClient.Endpoints.Leaderboards
  fullName: SRLApiClient.Endpoints.Leaderboards
- uid: SRLApiClient.Endpoints.SRLEndpoint
  commentId: T:SRLApiClient.Endpoints.SRLEndpoint
  parent: SRLApiClient.Endpoints
  name: SRLEndpoint
  nameWithType: SRLEndpoint
  fullName: SRLApiClient.Endpoints.SRLEndpoint
- uid: SRLApiClient.Endpoints.SRLEndpoint.BasePath
  commentId: P:SRLApiClient.Endpoints.SRLEndpoint.BasePath
  parent: SRLApiClient.Endpoints.SRLEndpoint
  name: BasePath
  nameWithType: SRLEndpoint.BasePath
  fullName: SRLApiClient.Endpoints.SRLEndpoint.BasePath
- uid: SRLApiClient.Endpoints.SRLEndpoint.SrlClient
  commentId: P:SRLApiClient.Endpoints.SRLEndpoint.SrlClient
  parent: SRLApiClient.Endpoints.SRLEndpoint
  name: SrlClient
  nameWithType: SRLEndpoint.SrlClient
  fullName: SRLApiClient.Endpoints.SRLEndpoint.SrlClient
- uid: SRLApiClient.Endpoints
  commentId: N:SRLApiClient.Endpoints
  name: SRLApiClient.Endpoints
  nameWithType: SRLApiClient.Endpoints
  fullName: SRLApiClient.Endpoints
- uid: SRLApiClient.SRLClient
  commentId: T:SRLApiClient.SRLClient
  parent: SRLApiClient
  name: SRLClient
  nameWithType: SRLClient
  fullName: SRLApiClient.SRLClient
- uid: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.#ctor*
  commentId: Overload:SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.#ctor
  name: LeaderboardsClient
  nameWithType: LeaderboardsClient.LeaderboardsClient
  fullName: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.LeaderboardsClient
- uid: SRLApiClient
  commentId: N:SRLApiClient
  name: SRLApiClient
  nameWithType: SRLApiClient
  fullName: SRLApiClient
- uid: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get*
  commentId: Overload:SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get
  name: Get
  nameWithType: LeaderboardsClient.Get
  fullName: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.Get
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SRLApiClient.Endpoints.Leaderboards.Leaderboard
  commentId: T:SRLApiClient.Endpoints.Leaderboards.Leaderboard
  parent: SRLApiClient.Endpoints.Leaderboards
  name: Leaderboard
  nameWithType: Leaderboard
  fullName: SRLApiClient.Endpoints.Leaderboards.Leaderboard
- uid: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync*
  commentId: Overload:SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync
  name: GetAsync
  nameWithType: LeaderboardsClient.GetAsync
  fullName: SRLApiClient.Endpoints.Leaderboards.LeaderboardsClient.GetAsync
- uid: Task{SRLApiClient.Endpoints.Leaderboards.Leaderboard}
  commentId: '!:Task{SRLApiClient.Endpoints.Leaderboards.Leaderboard}'
  definition: Task`1
  name: Task<Leaderboard>
  nameWithType: Task<Leaderboard>
  fullName: Task<SRLApiClient.Endpoints.Leaderboards.Leaderboard>
  nameWithType.vb: Task(Of Leaderboard)
  fullName.vb: Task(Of SRLApiClient.Endpoints.Leaderboards.Leaderboard)
  name.vb: Task(Of Leaderboard)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SRLApiClient.Endpoints.Leaderboards.Leaderboard
    name: Leaderboard
    nameWithType: Leaderboard
    fullName: SRLApiClient.Endpoints.Leaderboards.Leaderboard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SRLApiClient.Endpoints.Leaderboards.Leaderboard
    name: Leaderboard
    nameWithType: Leaderboard
    fullName: SRLApiClient.Endpoints.Leaderboards.Leaderboard
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
