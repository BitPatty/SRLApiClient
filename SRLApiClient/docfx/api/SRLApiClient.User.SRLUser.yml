### YamlMime:ManagedReference
items:
- uid: SRLApiClient.User.SRLUser
  commentId: T:SRLApiClient.User.SRLUser
  id: SRLUser
  parent: SRLApiClient.User
  children:
  - SRLApiClient.User.SRLUser.#ctor(SRLApiClient.SRLClient)
  - SRLApiClient.User.SRLUser.Id
  - SRLApiClient.User.SRLUser.Name
  - SRLApiClient.User.SRLUser.Player
  - SRLApiClient.User.SRLUser.Role
  - SRLApiClient.User.SRLUser.SetApi(SRLApiClient.Endpoints.StreamApi)
  - SRLApiClient.User.SRLUser.SetCapitalization(System.String)
  - SRLApiClient.User.SRLUser.SetChannel(System.String)
  - SRLApiClient.User.SRLUser.SetCountry(System.String)
  - SRLApiClient.User.SRLUser.SetTwitter(System.String)
  - SRLApiClient.User.SRLUser.SetYoutube(System.String)
  - SRLApiClient.User.SRLUser.Verify
  - SRLApiClient.User.SRLUser.VerifyAsync
  langs:
  - csharp
  - vb
  name: SRLUser
  nameWithType: SRLUser
  fullName: SRLApiClient.User.SRLUser
  type: Class
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: SRLUser
    path: User/SRLUser.cs
    startLine: 10
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nUser account used for authenticated <xref href=\"SRLApiClient.SRLClient\" data-throw-if-not-resolved=\"false\"></xref> requests\n"
  example: []
  syntax:
    content: 'public class SRLUser : object'
    content.vb: >-
      Public Class SRLUser
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SRLApiClient.User.SRLUser.Id
  commentId: P:SRLApiClient.User.SRLUser.Id
  id: Id
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SRLUser.Id
  fullName: SRLApiClient.User.SRLUser.Id
  type: Property
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: Id
    path: User/SRLUser.cs
    startLine: 17
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nThe users SRL id\n"
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Id As Integer
  overload: SRLApiClient.User.SRLUser.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SRLApiClient.User.SRLUser.Name
  commentId: P:SRLApiClient.User.SRLUser.Name
  id: Name
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SRLUser.Name
  fullName: SRLApiClient.User.SRLUser.Name
  type: Property
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: Name
    path: User/SRLUser.cs
    startLine: 22
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nThe username\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: SRLApiClient.User.SRLUser.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SRLApiClient.User.SRLUser.Role
  commentId: P:SRLApiClient.User.SRLUser.Role
  id: Role
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: Role
  nameWithType: SRLUser.Role
  fullName: SRLApiClient.User.SRLUser.Role
  type: Property
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: Role
    path: User/SRLUser.cs
    startLine: 27
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nThe user role / permission level\n"
  example: []
  syntax:
    content: public UserRole Role { get; }
    parameters: []
    return:
      type: SRLApiClient.User.UserRole
    content.vb: Public ReadOnly Property Role As UserRole
  overload: SRLApiClient.User.SRLUser.Role*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SRLApiClient.User.SRLUser.Player
  commentId: P:SRLApiClient.User.SRLUser.Player
  id: Player
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: SRLUser.Player
  fullName: SRLApiClient.User.SRLUser.Player
  type: Property
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: Player
    path: User/SRLUser.cs
    startLine: 32
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\n<xref href=\"SRLApiClient.Endpoints.Players.Player\" data-throw-if-not-resolved=\"false\"></xref> object returned from the <xref href=\"SRLApiClient.Endpoints.Players.PlayersClient\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Player Player { get; }
    parameters: []
    return:
      type: SRLApiClient.Endpoints.Players.Player
    content.vb: Public ReadOnly Property Player As Player
  overload: SRLApiClient.User.SRLUser.Player*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SRLApiClient.User.SRLUser.#ctor(SRLApiClient.SRLClient)
  commentId: M:SRLApiClient.User.SRLUser.#ctor(SRLApiClient.SRLClient)
  id: '#ctor(SRLApiClient.SRLClient)'
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: SRLUser(SRLClient)
  nameWithType: SRLUser.SRLUser(SRLClient)
  fullName: SRLApiClient.User.SRLUser.SRLUser(SRLApiClient.SRLClient)
  type: Constructor
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: .ctor
    path: User/SRLUser.cs
    startLine: 38
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nCreates a new instance of <xref href=\"SRLApiClient.User.SRLUser\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public SRLUser(SRLClient baseClient)
    parameters:
    - id: baseClient
      type: SRLApiClient.SRLClient
      description: The base client used for requests
    content.vb: Public Sub New(baseClient As SRLClient)
  overload: SRLApiClient.User.SRLUser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.Verify
  commentId: M:SRLApiClient.User.SRLUser.Verify
  id: Verify
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: Verify()
  nameWithType: SRLUser.Verify()
  fullName: SRLApiClient.User.SRLUser.Verify()
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: Verify
    path: User/SRLUser.cs
    startLine: 45
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nVerifies that the <xref href=\"SRLApiClient.User.SRLUser\" data-throw-if-not-resolved=\"false\"></xref> is an authenticated user\n"
  example: []
  syntax:
    content: public bool Verify()
    return:
      type: System.Boolean
      description: Returns true if the <xref href="SRLApiClient.User.SRLUser" data-throw-if-not-resolved="false"></xref> account could be verified
    content.vb: Public Function Verify As Boolean
  overload: SRLApiClient.User.SRLUser.Verify*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.VerifyAsync
  commentId: M:SRLApiClient.User.SRLUser.VerifyAsync
  id: VerifyAsync
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: VerifyAsync()
  nameWithType: SRLUser.VerifyAsync()
  fullName: SRLApiClient.User.SRLUser.VerifyAsync()
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: VerifyAsync
    path: User/SRLUser.cs
    startLine: 51
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nAsynchronously verifies that the <xref href=\"SRLApiClient.User.SRLUser\" data-throw-if-not-resolved=\"false\"></xref> is properly authenticated\n"
  example: []
  syntax:
    content: public Task<bool> VerifyAsync()
    return:
      type: Task{System.Boolean}
      description: Returns true if the verification succeeds
    content.vb: Public Function VerifyAsync As Task(Of Boolean)
  overload: SRLApiClient.User.SRLUser.VerifyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.SetChannel(System.String)
  commentId: M:SRLApiClient.User.SRLUser.SetChannel(System.String)
  id: SetChannel(System.String)
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: SetChannel(String)
  nameWithType: SRLUser.SetChannel(String)
  fullName: SRLApiClient.User.SRLUser.SetChannel(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: SetChannel
    path: User/SRLUser.cs
    startLine: 74
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nModifies the channel used for streams\n"
  example: []
  syntax:
    content: public bool SetChannel(string s)
    parameters:
    - id: s
      type: System.String
      description: The users channel name
    return:
      type: System.Boolean
      description: Returns true on success
    content.vb: Public Function SetChannel(s As String) As Boolean
  overload: SRLApiClient.User.SRLUser.SetChannel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.SetTwitter(System.String)
  commentId: M:SRLApiClient.User.SRLUser.SetTwitter(System.String)
  id: SetTwitter(System.String)
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: SetTwitter(String)
  nameWithType: SRLUser.SetTwitter(String)
  fullName: SRLApiClient.User.SRLUser.SetTwitter(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: SetTwitter
    path: User/SRLUser.cs
    startLine: 82
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nModifies the users twitter account\n"
  example: []
  syntax:
    content: public bool SetTwitter(string s)
    parameters:
    - id: s
      type: System.String
      description: The users twitter name
    return:
      type: System.Boolean
      description: Returns true on success
    content.vb: Public Function SetTwitter(s As String) As Boolean
  overload: SRLApiClient.User.SRLUser.SetTwitter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.SetYoutube(System.String)
  commentId: M:SRLApiClient.User.SRLUser.SetYoutube(System.String)
  id: SetYoutube(System.String)
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: SetYoutube(String)
  nameWithType: SRLUser.SetYoutube(String)
  fullName: SRLApiClient.User.SRLUser.SetYoutube(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: SetYoutube
    path: User/SRLUser.cs
    startLine: 90
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nModifies the users youtube account\n"
  example: []
  syntax:
    content: public bool SetYoutube(string s)
    parameters:
    - id: s
      type: System.String
      description: The users youtube name
    return:
      type: System.Boolean
      description: Returns true on success
    content.vb: Public Function SetYoutube(s As String) As Boolean
  overload: SRLApiClient.User.SRLUser.SetYoutube*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.SetCapitalization(System.String)
  commentId: M:SRLApiClient.User.SRLUser.SetCapitalization(System.String)
  id: SetCapitalization(System.String)
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: SetCapitalization(String)
  nameWithType: SRLUser.SetCapitalization(String)
  fullName: SRLApiClient.User.SRLUser.SetCapitalization(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: SetCapitalization
    path: User/SRLUser.cs
    startLine: 98
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nModifies the capitalization of the users username\n"
  example: []
  syntax:
    content: public bool SetCapitalization(string s)
    parameters:
    - id: s
      type: System.String
      description: The username with the new capitalizatione
    return:
      type: System.Boolean
      description: Returns true on success
    content.vb: Public Function SetCapitalization(s As String) As Boolean
  overload: SRLApiClient.User.SRLUser.SetCapitalization*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.SetApi(SRLApiClient.Endpoints.StreamApi)
  commentId: M:SRLApiClient.User.SRLUser.SetApi(SRLApiClient.Endpoints.StreamApi)
  id: SetApi(SRLApiClient.Endpoints.StreamApi)
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: SetApi(StreamApi)
  nameWithType: SRLUser.SetApi(StreamApi)
  fullName: SRLApiClient.User.SRLUser.SetApi(SRLApiClient.Endpoints.StreamApi)
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: SetApi
    path: User/SRLUser.cs
    startLine: 106
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nModifies the users streaming API\n"
  example: []
  syntax:
    content: public bool SetApi(StreamApi s)
    parameters:
    - id: s
      type: SRLApiClient.Endpoints.StreamApi
      description: The API used for streams
    return:
      type: System.Boolean
      description: Returns true on success
    content.vb: Public Function SetApi(s As StreamApi) As Boolean
  overload: SRLApiClient.User.SRLUser.SetApi*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SRLApiClient.User.SRLUser.SetCountry(System.String)
  commentId: M:SRLApiClient.User.SRLUser.SetCountry(System.String)
  id: SetCountry(System.String)
  parent: SRLApiClient.User.SRLUser
  langs:
  - csharp
  - vb
  name: SetCountry(String)
  nameWithType: SRLUser.SetCountry(String)
  fullName: SRLApiClient.User.SRLUser.SetCountry(System.String)
  type: Method
  source:
    remote:
      path: SRLApiClient/User/SRLUser.cs
      branch: master
      repo: git@github.com:BitPatty/SRLApiClient.git
    id: SetCountry
    path: User/SRLUser.cs
    startLine: 114
  assemblies:
  - SRLApiClient
  namespace: SRLApiClient.User
  summary: "\nModifies the users country\n"
  example: []
  syntax:
    content: public bool SetCountry(string s)
    parameters:
    - id: s
      type: System.String
      description: The users country name. To get a list of valid countries use <xref href="SRLApiClient.SRLClient.Countries" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: Returns true on success
    content.vb: Public Function SetCountry(s As String) As Boolean
  overload: SRLApiClient.User.SRLUser.SetCountry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SRLApiClient.SRLClient
  commentId: T:SRLApiClient.SRLClient
  parent: SRLApiClient
  name: SRLClient
  nameWithType: SRLClient
  fullName: SRLApiClient.SRLClient
- uid: SRLApiClient.User
  commentId: N:SRLApiClient.User
  name: SRLApiClient.User
  nameWithType: SRLApiClient.User
  fullName: SRLApiClient.User
- uid: SRLApiClient
  commentId: N:SRLApiClient
  name: SRLApiClient
  nameWithType: SRLApiClient
  fullName: SRLApiClient
- uid: SRLApiClient.User.SRLUser.Id*
  commentId: Overload:SRLApiClient.User.SRLUser.Id
  name: Id
  nameWithType: SRLUser.Id
  fullName: SRLApiClient.User.SRLUser.Id
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SRLApiClient.User.SRLUser.Name*
  commentId: Overload:SRLApiClient.User.SRLUser.Name
  name: Name
  nameWithType: SRLUser.Name
  fullName: SRLApiClient.User.SRLUser.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SRLApiClient.User.SRLUser.Role*
  commentId: Overload:SRLApiClient.User.SRLUser.Role
  name: Role
  nameWithType: SRLUser.Role
  fullName: SRLApiClient.User.SRLUser.Role
- uid: SRLApiClient.User.UserRole
  commentId: T:SRLApiClient.User.UserRole
  parent: SRLApiClient.User
  name: UserRole
  nameWithType: UserRole
  fullName: SRLApiClient.User.UserRole
- uid: SRLApiClient.Endpoints.Players.Player
  commentId: T:SRLApiClient.Endpoints.Players.Player
  parent: SRLApiClient.Endpoints.Players
  name: Player
  nameWithType: Player
  fullName: SRLApiClient.Endpoints.Players.Player
- uid: SRLApiClient.Endpoints.Players.PlayersClient
  commentId: T:SRLApiClient.Endpoints.Players.PlayersClient
  parent: SRLApiClient.Endpoints.Players
  name: PlayersClient
  nameWithType: PlayersClient
  fullName: SRLApiClient.Endpoints.Players.PlayersClient
- uid: SRLApiClient.User.SRLUser.Player*
  commentId: Overload:SRLApiClient.User.SRLUser.Player
  name: Player
  nameWithType: SRLUser.Player
  fullName: SRLApiClient.User.SRLUser.Player
- uid: SRLApiClient.Endpoints.Players
  commentId: N:SRLApiClient.Endpoints.Players
  name: SRLApiClient.Endpoints.Players
  nameWithType: SRLApiClient.Endpoints.Players
  fullName: SRLApiClient.Endpoints.Players
- uid: SRLApiClient.User.SRLUser
  commentId: T:SRLApiClient.User.SRLUser
  parent: SRLApiClient.User
  name: SRLUser
  nameWithType: SRLUser
  fullName: SRLApiClient.User.SRLUser
- uid: SRLApiClient.User.SRLUser.#ctor*
  commentId: Overload:SRLApiClient.User.SRLUser.#ctor
  name: SRLUser
  nameWithType: SRLUser.SRLUser
  fullName: SRLApiClient.User.SRLUser.SRLUser
- uid: SRLApiClient.User.SRLUser.Verify*
  commentId: Overload:SRLApiClient.User.SRLUser.Verify
  name: Verify
  nameWithType: SRLUser.Verify
  fullName: SRLApiClient.User.SRLUser.Verify
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SRLApiClient.User.SRLUser.VerifyAsync*
  commentId: Overload:SRLApiClient.User.SRLUser.VerifyAsync
  name: VerifyAsync
  nameWithType: SRLUser.VerifyAsync
  fullName: SRLApiClient.User.SRLUser.VerifyAsync
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SRLApiClient.User.SRLUser.SetChannel*
  commentId: Overload:SRLApiClient.User.SRLUser.SetChannel
  name: SetChannel
  nameWithType: SRLUser.SetChannel
  fullName: SRLApiClient.User.SRLUser.SetChannel
- uid: SRLApiClient.User.SRLUser.SetTwitter*
  commentId: Overload:SRLApiClient.User.SRLUser.SetTwitter
  name: SetTwitter
  nameWithType: SRLUser.SetTwitter
  fullName: SRLApiClient.User.SRLUser.SetTwitter
- uid: SRLApiClient.User.SRLUser.SetYoutube*
  commentId: Overload:SRLApiClient.User.SRLUser.SetYoutube
  name: SetYoutube
  nameWithType: SRLUser.SetYoutube
  fullName: SRLApiClient.User.SRLUser.SetYoutube
- uid: SRLApiClient.User.SRLUser.SetCapitalization*
  commentId: Overload:SRLApiClient.User.SRLUser.SetCapitalization
  name: SetCapitalization
  nameWithType: SRLUser.SetCapitalization
  fullName: SRLApiClient.User.SRLUser.SetCapitalization
- uid: SRLApiClient.User.SRLUser.SetApi*
  commentId: Overload:SRLApiClient.User.SRLUser.SetApi
  name: SetApi
  nameWithType: SRLUser.SetApi
  fullName: SRLApiClient.User.SRLUser.SetApi
- uid: SRLApiClient.Endpoints.StreamApi
  commentId: T:SRLApiClient.Endpoints.StreamApi
  parent: SRLApiClient.Endpoints
  name: StreamApi
  nameWithType: StreamApi
  fullName: SRLApiClient.Endpoints.StreamApi
- uid: SRLApiClient.Endpoints
  commentId: N:SRLApiClient.Endpoints
  name: SRLApiClient.Endpoints
  nameWithType: SRLApiClient.Endpoints
  fullName: SRLApiClient.Endpoints
- uid: SRLApiClient.SRLClient.Countries
  commentId: P:SRLApiClient.SRLClient.Countries
  isExternal: true
- uid: SRLApiClient.User.SRLUser.SetCountry*
  commentId: Overload:SRLApiClient.User.SRLUser.SetCountry
  name: SetCountry
  nameWithType: SRLUser.SetCountry
  fullName: SRLApiClient.User.SRLUser.SetCountry
