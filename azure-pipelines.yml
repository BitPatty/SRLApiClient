trigger:
  branches:
    include:
      - master

pr: none

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.14'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  - group: 'SRLApiClient.Build'
  - name: 'dotnetSdkVersion'
    value: '3.0.100-preview3-010431'

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Install .NET Core $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'
- task: DotNetCoreCLI@2
  displayName: 'Build SRLApiClient'
  inputs:
    version: '$(dotnetSdkVersion)'
    command: build
    projects: 'SRLApiClient/SRLApiClient.csproj'
    arguments: '-c $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Build Tests'
  inputs:
    version: '$(dotnetSdkVersion)'
    command: build
    projects: 'Tests/Tests.csproj'
    arguments: '-c $(BuildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  env:
    SRLUsername: '$(SRLUsername)'
    SRLPassword: '$(SRLPassword)'
  inputs:
    version: '$(dotnetSdkVersion)'
    command: test
    projects: 'Tests/Tests.csproj'
    arguments: '-c $(BuildConfiguration) --no-build'
- task: CopyFiles@2
  displayName: 'Copy Artifacts'
  inputs:
    Contents: '**/bin/Release/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
   PathtoPublish: '$(Build.ArtifactStagingDirectory)'
   ArtifactName: 'SRLApiClientArtifact'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
